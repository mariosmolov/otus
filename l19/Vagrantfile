 cat ./Vagrantfile 
# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.246', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },
  :inetRouter2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.250', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.50.10', adapter: 3, netmask: "255.255.255.0", virtualbox__generic: "vboxnet1"},
                ]
  },
  :CentralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.245', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.249', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.253', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 5, netmask: "255.255.255.240", virtualbox__intnet: "cdir-net"},
                ]
  },
  :CentralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "cdir-net"},
                ]
  }  
}

Vagrant.configure("2") do |config|
#
  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
          yum install -y epel-release
          yum install -y mc traceroute vim net-tools
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            ip route add 192.168.0.0/16 via 192.168.0.245
            SHELL
        when "inetRouter2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.0.249" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            echo "DEFROUTE=yes" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            iptables -t nat -A PREROUTING -p TCP -i eth2 -d 192.168.50.10 --dport 8080 -j DNAT --to-destination 192.168.0.2:80
            iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
            sysctl net.ipv4.conf.all.forwarding=1
            SHELL
        when "CentralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.0.246" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            sysctl net.ipv4.conf.all.forwarding=1
            SHELL
        when "CentralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            yum -y install nginx
            systemctl enable nginx
            systemctl start nginx
            SHELL
        end
      end
  end  
end
